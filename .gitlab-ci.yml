image: docker:latest

variables:
  BARBERINI_ANALYTICS_CONTEXT: CI

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  

# Stages are required a) to priorize jobs and b) to avoid concurrency issues.
stages:
  - build
  - test
  - analyze

build:
  stage: build
  tags:
    - barberini
  before_script:
    - USER="gitlab_runner_${CI_JOB_ID}"
  script:
    - docker build -t ${USER}_test ./docker $(
        [[ -n $"CI_MERGE_REQUEST_TARGET_BRANCH_SHA" ]]
        && git diff --name-only ^${CI_MERGE_REQUEST_TARGET_BRANCH_NAME} | grep -q docker/
        && echo '--no-cache' 
      )

unittest:
  stage: test
  tags:
    - barberini
  before_script:
    - USER="gitlab_runner_${CI_JOB_ID}"
    - make startup
  script:
    - docker exec --env FULL_TEST=$FULL_TEST $USER-barberini_analytics_luigi make coverage
  after_script:
    - # Workaround for https://gitlab.com/gitlab-org/gitlab-runner/-/issues/3088
      USER="gitlab_runner_${CI_JOB_ID}"
    - make docker-cleanup

  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  artifacts:
    paths: 
      - htmlcov

minimal-mining-pipeline:
  stage: test
  tags:
    - barberini
  before_script:
    - USER="gitlab_runner_${CI_JOB_ID}"
  script:
    - ./scripts/tests/run_minimal_mining_pipeline.sh

lint-python:
  stage: analyze
  tags:
    - barberini
  before_script:
    - USER="gitlab_runner_${CI_JOB_ID}"
    - make startup
  script:
    - docker exec --env FULL_TEST=$FULL_TEST $USER-barberini_analytics_luigi make lint-python
  after_script:
    - # Workaround for https://gitlab.com/gitlab-org/gitlab-runner/-/issues/3088
      USER="gitlab_runner_${CI_JOB_ID}"
    - make docker-cleanup

python-bandit:
  stage: analyze
  tags:
    - barberini
  before_script:
    - USER="gitlab_runner_${CI_JOB_ID}"
    - make startup
  script:
    - docker exec --env FULL_TEST=$FULL_TEST $USER-barberini_analytics_luigi make python-bandit
  after_script:
    - # Workaround for https://gitlab.com/gitlab-org/gitlab-runner/-/issues/3088
      USER="gitlab_runner_${CI_JOB_ID}"
    - make docker-cleanup

shellcheck:
  stage: analyze
  tags:
    - barberini
  before_script:
    - USER="gitlab_runner_${CI_JOB_ID}"
    - make startup
  script:
    - docker exec --env FULL_TEST=$FULL_TEST $USER-barberini_analytics_luigi make shellcheck
  after_script:
    - # Workaround for https://gitlab.com/gitlab-org/gitlab-runner/-/issues/3088
      USER="gitlab_runner_${CI_JOB_ID}"
    - make docker-cleanup

lint-markdown:
  stage: analyze
  tags:
    - barberini
  before_script:
    - USER="gitlab_runner_${CI_JOB_ID}"
    - make startup
  script:
  - docker exec --env FULL_TEST=$FULL_TEST $USER-barberini_analytics_luigi make lint-markdown
  after_script:
    - # Workaround for https://gitlab.com/gitlab-org/gitlab-runner/-/issues/3088
      USER="gitlab_runner_${CI_JOB_ID}"
    - make docker-cleanup
